{"version":3,"sources":["components/navigation/navigation.module.scss","components/breadcrumbs/breadcrumbs.view.tsx","components/breadcrumbs/breadcrumbs.hook.ts","constants/region.ts","constants/region-options.ts","contexts/region.ts","hooks/use-region.ts","components/region-select/region-select.view.tsx","components/region-select/region-select.hook.ts","contexts/density.ts","contexts/locale.ts","contexts/mode.ts","contexts/motion.ts","constants/locale.ts","components/density-select/density-select.view.tsx","components/density-select/density-select.hook.ts","components/locale-select/locale-select.view.tsx","components/locale-select/locale-select.hook.ts","components/mode-select/mode-select.view.tsx","components/mode-select/mode-select.hook.ts","components/motion-checkbox/motion-checkbox.view.tsx","components/motion-checkbox/motion-checkbox.hook.ts","components/header-actions/header-actions.util.custom-preference.tsx","components/header-actions/header-actions.hook.ts","hooks/use-density.ts","hooks/use-locale.ts","hooks/use-mode.ts","hooks/use-motion.ts","components/header-actions/header-actions.view.tsx","components/header-description/header-description.view.tsx","hooks/use-hide-container-content.ts","components/header/header.view.tsx","components/header/header.hook.ts","components/navigation/navigation.hook.items.ts","components/navigation/navigation.view.tsx","components/navigation/navigation.hook.ts","components/notifications/notifications.view.tsx","components/app-layout/app-layout.view.tsx","components/app-layout/app-layout.hook.ts","components/authenticate/authenticate.view.tsx","components/authenticate/authenticate.hook.ts","components/home/home.view.tsx","components/resources-table/resources-table.view.tsx","components/resources-table/resources-table.hook.ts","contexts/authentication.ts","hooks/use-aws-sdk.ts","hooks/use-authentication.ts","components/log-groups/log-groups.hook.ts","hooks/use-cloudwatch-logs.ts","components/log-groups/log-groups.view.tsx","components/routes/routes.view.tsx","components/main/main.view.tsx","constants/query-client.ts","constants/translations.ts","components/app/app.view.tsx","components/app/app.hook.ts","constants/root.ts","utils/report-web-vitals.ts","index.tsx","utils/set-authentication.ts","utils/get-authentication.ts","utils/is-record.ts"],"names":["module","exports","DEFAULT_CHILDREN","Object","freeze","Breadcrumbs","children","breadcrumbs","translate","useTranslate","handleFollow","useBreadcrumbGroup","ariaLabel","items","useMemo","text","href","useBreadcrumbs","onFollow","Region","REGION_OPTIONS","label","value","UsEast1","UsWest1","UsWest2","createContext","useRegion","useContext","RegionContext","Error","RegionSelect","region","setRegion","handleChange","useCallback","e","detail","selectedOption","find","option","useRegionSelect","onChange","options","Locale","DensitySelect","Density","Comfortable","Compact","useDensitySelect","LocaleSelect","EnUs","useLocaleSelect","ModeSelect","Mode","Light","Dark","useModeSelect","MotionCheckbox","checked","useMotionCheckbox","headerActionsCustomPreference","preferences","setCustomValue","direction","size","newDensity","density","newLocale","locale","newMode","mode","newMotion","motion","useHeaderActions","DensityContext","useDensity","setDensity","LocaleContext","useLocale","setLocale","ModeContext","useMode","setMode","Motion","useMotion","setMotion","cancelLabel","confirmLabel","customPreference","title","handleConfirm","custom","HeaderActions","onConfirm","HeaderDescription","name","fontSize","target","useHideContainerContent","ref","useRef","useLayoutEffect","current","firstChild","lastChild","style","setProperty","Header","header","description","actions","useItems","type","Navigation","useSideNavigation","activeHref","useNavigation","margin","variant","className","styles","sideNavigation","memo","Notifications","length","CustomAppLayout","Tools","breadcrumbsHide","contentType","navigationHide","notifications","onToolsChange","toolsHide","controlledToolsOpen","useAwsuiAppLayout","defaultNavigationOpen","defaultToolsOpen","handleNavigationChange","handleToolsChange","navigationOpen","toolsOpen","scrollIntoView","ariaLabels","navigation","navigationToggle","navigationClose","tools","toolsToggle","toolsClose","useAppLayout","content","onNavigationChange","Authenticate","onAuthentication","useCheckbox","remember","handleRememberChange","useInput","handleAccessKeyIdChange","accessKeyId","handleSecretAccessKeyChange","secretAccessKey","accessKeyIdAriaLabel","secretAccessKeyAriaLabel","handleSubmit","useAuthenticate","onClick","Alarms","ResourcesTable","columnDefinitions","loadingStep","loadingSteps","resources","trackBy","useCollectionPreferences","pageSize","visibleContent","wrapLines","usePagination","currentPageIndex","handlePaginationChange","useTable","handleSelectionChange","handleSortingChange","selectedItems","sortingColumn","sortingDescending","collectionPreferencesTitle","loading","openEnd","pagesCount","selectionGroupLabel","allItemsSelectionLabel","n","itemSelectionLabel","row","findIndex","item","loadingText","step","total","pageSizePreference","map","visibleContentPreference","wrapLinesPreference","useResourcesTable","empty","filter","onSelectionChange","onSortingChange","pagination","resizableColumns","selectionType","stickyHeader","visibleColumns","useAwsSdk","Client","AuthenticationContext","useAuthentication","useLogGroups","cloudWatchLogs","CloudWatchLogs","data","useQuery","a","describeLogGroups","promise","logGroups","COLUMN_DEFINITIONS","id","cell","logGroupName","creationTime","retentionInDays","metricFilterCount","storedBytes","kmsKeyId","LogGroups","Routes","component","path","Home","Main","Provider","QueryClient","enUs","App","onDensityChange","onModeChange","onMotionChange","onRegionChange","useState","handleLocaleChange","useApp","fallbackLocale","translations","TRANSLATIONS","QueryClientProvider","client","QUERY_CLIENT","root","document","getElementById","getCLS","metric","console","log","getFCP","getFID","getLCP","getTTFB","DEFAULT_DENSITY","DEFAULT_MODE","DEFAULT_MOTION","DEFAULT_REGION","defaultDensity","defaultMode","defaultMotion","defaultRegion","_accessKeyId","_density","_mode","_motion","_region","_secretAccessKey","this","render","bind","applyDensity","applyMode","applyMotion","authentication","window","localStorage","setItem","JSON","stringify","setAuthentication","body","disableMotion","applyAuthentication","applyRegion","props","getItem","unknown","parse","isRecord","prototype","hasOwnProperty","call","getAuthentication"],"mappings":"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","file":"static/js/main.f64939de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideNavigation\":\"navigation_sideNavigation__tO8pZ\"};","import BreadcrumbGroup, {\n  BreadcrumbGroupProps,\n} from '@awsui/components-react/breadcrumb-group';\nimport { ReactElement } from 'react';\nimport useBreadcrumbs from './breadcrumbs.hook';\n\ninterface Props {\n  children?: readonly BreadcrumbGroupProps.Item[];\n}\n\nconst DEFAULT_CHILDREN: readonly BreadcrumbGroupProps.Item[] = Object.freeze(\n  [],\n);\n\nexport default function Breadcrumbs({\n  children = DEFAULT_CHILDREN,\n}: Props): ReactElement {\n  const { ariaLabel, handleFollow, items } = useBreadcrumbs(children);\n\n  return (\n    <BreadcrumbGroup\n      ariaLabel={ariaLabel}\n      items={items}\n      onFollow={handleFollow}\n    />\n  );\n}\n","import { BreadcrumbGroupProps } from '@awsui/components-react/breadcrumb-group';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\nimport { useBreadcrumbGroup } from 'use-awsui-router';\n\ninterface State {\n  ariaLabel?: string;\n  handleFollow: BreadcrumbGroupProps['onFollow'];\n  items: BreadcrumbGroupProps.Item[];\n}\n\nexport default function useBreadcrumbs(\n  breadcrumbs: readonly BreadcrumbGroupProps.Item[],\n): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const { handleFollow } = useBreadcrumbGroup();\n\n  return {\n    ariaLabel: translate('Breadcrumbs'),\n    handleFollow,\n\n    items: useMemo(\n      (): BreadcrumbGroupProps.Item[] => [\n        {\n          text: translate('Home') || '...',\n          href: '/',\n        },\n        ...breadcrumbs,\n      ],\n      [breadcrumbs, translate],\n    ),\n  };\n}\n","enum Region {\n  UsEast1 = 'us-east-1',\n  UsWest1 = 'us-west-1',\n  UsWest2 = 'us-west-2',\n}\n\nexport default Region;\n","import { SelectProps } from '@awsui/components-react/select';\nimport Region from '../constants/region';\n\nconst REGION_OPTIONS: SelectProps.Option[] = [\n  {\n    label: 'us-east-1',\n    value: Region.UsEast1,\n  },\n  {\n    label: 'us-west-1',\n    value: Region.UsWest1,\n  },\n  {\n    label: 'us-west-2',\n    value: Region.UsWest2,\n  },\n];\n\nexport default REGION_OPTIONS;\n","import { createContext } from 'react';\nimport Region from '../constants/region';\n\nexport default createContext<[Region, (region: Region) => void] | null>(null);\n","import { useContext } from 'react';\nimport Region from '../constants/region';\nimport RegionContext from '../contexts/region';\n\ntype State = [Region, (region: Region) => void];\n\nexport default function useRegion(): State {\n  const value: State | null = useContext(RegionContext);\n  if (value === null) {\n    throw new Error('The Region context was not mounted.');\n  }\n  return value;\n}\n","import Select from '@awsui/components-react/select';\nimport { ReactElement } from 'react';\nimport REGION_OPTIONS from '../../constants/region-options';\nimport useRegionSelect from './region-select.hook';\n\nexport default function RegionSelect(): ReactElement {\n  const { ariaLabel, handleChange, selectedOption } = useRegionSelect();\n\n  return (\n    <Select\n      ariaLabel={ariaLabel}\n      onChange={handleChange}\n      options={REGION_OPTIONS}\n      selectedOption={selectedOption}\n    />\n  );\n}\n","import { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { SelectProps } from '@awsui/components-react/select';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback, useMemo } from 'react';\nimport Region from '../../constants/region';\nimport REGION_OPTIONS from '../../constants/region-options';\nimport useRegion from '../../hooks/use-region';\n\ninterface State {\n  ariaLabel?: string;\n  handleChange(\n    this: void,\n    event: NonCancelableCustomEvent<SelectProps.ChangeDetail>,\n  ): void;\n  selectedOption: SelectProps.Option;\n}\n\nexport default function useRegionSelect(): State {\n  const [region, setRegion] = useRegion();\n\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  return {\n    ariaLabel: translate('Region'),\n\n    handleChange: useCallback(\n      (e: CustomEvent<SelectProps.ChangeDetail>): void => {\n        // All option values are `Region`s.\n        setRegion(e.detail.selectedOption.value as Region);\n      },\n      [setRegion],\n    ),\n\n    selectedOption: useMemo((): SelectProps.Option => {\n      const findSelectedOption = (option: SelectProps.Option): boolean =>\n        option.value === region;\n\n      // Each `Region` value is guaranteed to have an option.\n      return REGION_OPTIONS.find(findSelectedOption) as SelectProps.Option;\n    }, [region]),\n  };\n}\n","import { Density } from '@awsui/global-styles';\nimport { createContext } from 'react';\n\nexport default createContext<[Density, (density: Density) => void] | null>(\n  null,\n);\n","import { createContext } from 'react';\nimport Locale from '../constants/locale';\n\nexport default createContext<[Locale, (density: Locale) => void] | null>(null);\n","import { Mode } from '@awsui/global-styles';\nimport { createContext } from 'react';\n\nexport default createContext<[Mode, (mode: Mode) => void] | null>(null);\n","import { createContext } from 'react';\n\nexport default createContext<[boolean, (motion: boolean) => void] | null>(null);\n","enum Locale {\n  EnUs = 'en-us',\n}\n\nexport default Locale;\n","import Select from '@awsui/components-react/select';\nimport { Density } from '@awsui/global-styles';\nimport { ReactElement } from 'react';\nimport useDensitySelect from './density-select.hook';\n\ninterface Props {\n  onChange(density: Density): void;\n  value: Density;\n}\n\nexport default function DensitySelect({\n  onChange,\n  value,\n}: Props): ReactElement {\n  const { ariaLabel, handleChange, options, selectedOption } = useDensitySelect(\n    {\n      onChange,\n      value,\n    },\n  );\n\n  return (\n    <Select\n      ariaLabel={ariaLabel}\n      onChange={handleChange}\n      options={options}\n      selectedOption={selectedOption}\n    />\n  );\n}\n","import { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { SelectProps } from '@awsui/components-react/select';\nimport { Density } from '@awsui/global-styles';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback, useMemo } from 'react';\n\ninterface Props {\n  onChange(density: Density): void;\n  value: Density;\n}\n\ninterface State {\n  ariaLabel?: string;\n  handleChange(\n    this: void,\n    event: NonCancelableCustomEvent<SelectProps.ChangeDetail>,\n  ): void;\n  options: SelectProps.Option[];\n  selectedOption: SelectProps.Option;\n}\n\nexport default function useDensitySelect({ onChange, value }: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const options: SelectProps.Option[] = useMemo((): SelectProps.Option[] => {\n    return [\n      {\n        label: translate('Comfortable') || '...',\n        value: Density.Comfortable,\n      },\n      {\n        label: translate('Compact') || '...',\n        value: Density.Compact,\n      },\n    ];\n  }, [translate]);\n\n  return {\n    ariaLabel: translate('Density'),\n    options,\n\n    handleChange: useCallback(\n      (e: CustomEvent<SelectProps.ChangeDetail>): void => {\n        // All option values are `Density`s.\n        onChange(e.detail.selectedOption.value as Density);\n      },\n      [onChange],\n    ),\n\n    selectedOption: useMemo((): SelectProps.Option => {\n      const findSelectedOption = (option: SelectProps.Option): boolean =>\n        option.value === value;\n\n      // Each `Density` value is guaranteed to have an option.\n      return options.find(findSelectedOption) as SelectProps.Option;\n    }, [options, value]),\n  };\n}\n","import Select from '@awsui/components-react/select';\nimport { ReactElement } from 'react';\nimport Locale from '../../constants/locale';\nimport useLocaleSelect from './locale-select.hook';\n\ninterface Props {\n  onChange(locale: Locale): void;\n  value: Locale;\n}\n\nexport default function LocaleSelect({ onChange, value }: Props): ReactElement {\n  const { ariaLabel, handleChange, options, selectedOption } = useLocaleSelect({\n    onChange,\n    value,\n  });\n\n  return (\n    <Select\n      ariaLabel={ariaLabel}\n      onChange={handleChange}\n      options={options}\n      selectedOption={selectedOption}\n    />\n  );\n}\n","import { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { SelectProps } from '@awsui/components-react/select';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback, useMemo } from 'react';\nimport Locale from '../../constants/locale';\n\ninterface Props {\n  onChange(locale: Locale): void;\n  value: Locale;\n}\n\ninterface State {\n  ariaLabel?: string;\n  handleChange(\n    this: void,\n    event: NonCancelableCustomEvent<SelectProps.ChangeDetail>,\n  ): void;\n  options: SelectProps.Option[];\n  selectedOption: SelectProps.Option;\n}\n\nexport default function useLocaleSelect({ onChange, value }: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const options: SelectProps.Option[] = useMemo((): SelectProps.Option[] => {\n    return [\n      {\n        label: translate('English') || 'English',\n        value: Locale.EnUs,\n      },\n    ];\n  }, [translate]);\n\n  return {\n    ariaLabel: translate('Locale'),\n    options,\n\n    handleChange: useCallback(\n      (e: CustomEvent<SelectProps.ChangeDetail>): void => {\n        // All option values are `Locale`s.\n        onChange(e.detail.selectedOption.value as Locale);\n      },\n      [onChange],\n    ),\n\n    selectedOption: useMemo((): SelectProps.Option => {\n      const findSelectedOption = (option: SelectProps.Option): boolean =>\n        option.value === value;\n\n      // Each `Locale` value is guaranteed to have an option.\n      return options.find(findSelectedOption) as SelectProps.Option;\n    }, [options, value]),\n  };\n}\n","import Select from '@awsui/components-react/select';\nimport { Mode } from '@awsui/global-styles';\nimport { ReactElement } from 'react';\nimport useModeSelect from './mode-select.hook';\n\ninterface Props {\n  onChange(mode: Mode): void;\n  value: Mode;\n}\n\nexport default function ModeSelect({ onChange, value }: Props): ReactElement {\n  const { ariaLabel, handleChange, options, selectedOption } = useModeSelect({\n    onChange,\n    value,\n  });\n\n  return (\n    <Select\n      ariaLabel={ariaLabel}\n      onChange={handleChange}\n      options={options}\n      selectedOption={selectedOption}\n    />\n  );\n}\n","import { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { SelectProps } from '@awsui/components-react/select';\nimport { Mode } from '@awsui/global-styles';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback, useMemo } from 'react';\n\ninterface Props {\n  onChange(mode: Mode): void;\n  value: Mode;\n}\n\ninterface State {\n  ariaLabel?: string;\n  handleChange(\n    this: void,\n    event: NonCancelableCustomEvent<SelectProps.ChangeDetail>,\n  ): void;\n  options: SelectProps.Option[];\n  selectedOption: SelectProps.Option;\n}\n\nexport default function useModeSelect({ onChange, value }: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const options: SelectProps.Option[] = useMemo((): SelectProps.Option[] => {\n    return [\n      {\n        label: translate('Light') || '...',\n        value: Mode.Light,\n      },\n      {\n        label: translate('Dark') || '...',\n        value: Mode.Dark,\n      },\n    ];\n  }, [translate]);\n\n  return {\n    ariaLabel: translate('Mode'),\n    options,\n\n    handleChange: useCallback(\n      (e: NonCancelableCustomEvent<SelectProps.ChangeDetail>): void => {\n        // All options have `Mode` values.\n        onChange(e.detail.selectedOption.value as Mode);\n      },\n      [onChange],\n    ),\n\n    selectedOption: useMemo((): SelectProps.Option => {\n      const findSelectedOption = (option: SelectProps.Option): boolean =>\n        option.value === value;\n      return options.find(findSelectedOption) as SelectProps.Option;\n    }, [options, value]),\n  };\n}\n","import Checkbox from '@awsui/components-react/checkbox';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport useMotionCheckbox from './motion-checkbox.hook';\n\ninterface Props {\n  onChange(motion: boolean): void;\n  value: boolean;\n}\n\nexport default function MotionCheckbox({\n  onChange,\n  value,\n}: Props): ReactElement {\n  const { ariaLabel, handleChange } = useMotionCheckbox({\n    onChange,\n  });\n\n  return (\n    <Checkbox ariaLabel={ariaLabel} checked={value} onChange={handleChange}>\n      <I18n>Motion</I18n>\n    </Checkbox>\n  );\n}\n","import { CheckboxProps } from '@awsui/components-react/checkbox';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback } from 'react';\n\ninterface Props {\n  onChange(motion: boolean): void;\n}\n\ninterface State {\n  ariaLabel?: string;\n  handleChange(\n    this: void,\n    event: NonCancelableCustomEvent<CheckboxProps.ChangeDetail>,\n  ): void;\n}\n\nexport default function useMotionCheckbox({ onChange }: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  return {\n    ariaLabel: translate('Motion'),\n\n    handleChange: useCallback(\n      (e: NonCancelableCustomEvent<CheckboxProps.ChangeDetail>): void => {\n        onChange(e.detail.checked);\n      },\n      [onChange],\n    ),\n  };\n}\n","import FormField from '@awsui/components-react/form-field';\nimport SpaceBetween from '@awsui/components-react/space-between';\nimport { Density, Mode } from '@awsui/global-styles';\nimport I18n from 'lazy-i18n';\nimport { Dispatch, ReactNode, SetStateAction } from 'react';\nimport DensitySelect from '../../components/density-select';\nimport LocaleSelect from '../../components/locale-select';\nimport ModeSelect from '../../components/mode-select';\nimport MotionCheckbox from '../../components/motion-checkbox';\nimport Locale from '../../constants/locale';\nimport Preferences from './header-actions.type.preferences';\n\nexport default function headerActionsCustomPreference(\n  this: void,\n  preferences: Preferences,\n  setCustomValue: Dispatch<SetStateAction<Preferences>>,\n): ReactNode {\n  const handleDensityChange = (newDensity: Density): void => {\n    setCustomValue({\n      ...preferences,\n      density: newDensity,\n    });\n  };\n\n  const handleLocaleChange = (newLocale: Locale): void => {\n    setCustomValue({\n      ...preferences,\n      locale: newLocale,\n    });\n  };\n\n  const handleModeChange = (newMode: Mode): void => {\n    setCustomValue({\n      ...preferences,\n      mode: newMode,\n    });\n  };\n\n  const handleMotionChange = (newMotion: boolean): void => {\n    setCustomValue({\n      ...preferences,\n      motion: newMotion,\n    });\n  };\n\n  return (\n    <SpaceBetween direction=\"vertical\" size=\"m\">\n      <FormField label={<I18n>Density</I18n>}>\n        <DensitySelect\n          onChange={handleDensityChange}\n          value={preferences.density}\n        />\n      </FormField>\n      <FormField label={<I18n>Locale</I18n>}>\n        <LocaleSelect\n          onChange={handleLocaleChange}\n          value={preferences.locale}\n        />\n      </FormField>\n      <FormField label={<I18n>Mode</I18n>}>\n        <ModeSelect onChange={handleModeChange} value={preferences.mode} />\n      </FormField>\n      <MotionCheckbox\n        onChange={handleMotionChange}\n        value={preferences.motion}\n      />\n    </SpaceBetween>\n  );\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport {\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useCallback,\n  useMemo,\n} from 'react';\nimport useDensity from '../../hooks/use-density';\nimport useLocale from '../../hooks/use-locale';\nimport useMode from '../../hooks/use-mode';\nimport useMotion from '../../hooks/use-motion';\nimport Preferences from './header-actions.type.preferences';\nimport customPreference from './header-actions.util.custom-preference';\n\ninterface State {\n  cancelLabel: string;\n  confirmLabel: string;\n  customPreference(\n    this: void,\n    preferences: Preferences,\n    setCustomValue: Dispatch<SetStateAction<Preferences>>,\n  ): ReactNode;\n  handleConfirm(\n    this: void,\n    event: NonCancelableCustomEvent<\n      CollectionPreferencesProps.Preferences<Preferences>\n    >,\n  ): void;\n  preferences: CollectionPreferencesProps.Preferences<Preferences>;\n  title: string;\n}\n\nexport default function useHeaderActions(): State {\n  // Contexts\n  const [density, setDensity] = useDensity();\n  const [locale, setLocale] = useLocale();\n  const [mode, setMode] = useMode();\n  const [motion, setMotion] = useMotion();\n  const translate: TranslateFunction = useTranslate();\n\n  return {\n    cancelLabel: translate('Cancel') || '...',\n    confirmLabel: translate('Confirm') || '...',\n    customPreference,\n    title: translate('Preferences') || '...',\n\n    handleConfirm: useCallback(\n      (\n        e: NonCancelableCustomEvent<\n          CollectionPreferencesProps.Preferences<Preferences>\n        >,\n      ): void => {\n        if (typeof e.detail.custom === 'undefined') {\n          return;\n        }\n        const {\n          density: newDensity,\n          locale: newLocale,\n          mode: newMode,\n          motion: newMotion,\n        } = e.detail.custom;\n        if (density !== newDensity) {\n          setDensity(newDensity);\n        }\n        if (locale !== newLocale) {\n          setLocale(newLocale);\n        }\n        if (mode !== newMode) {\n          setMode(newMode);\n        }\n        if (motion !== newMotion) {\n          setMotion(newMotion);\n        }\n      },\n      [\n        density,\n        locale,\n        mode,\n        motion,\n        setDensity,\n        setLocale,\n        setMode,\n        setMotion,\n      ],\n    ),\n\n    preferences: useMemo(\n      (): CollectionPreferencesProps.Preferences<Preferences> => ({\n        custom: {\n          density,\n          locale,\n          mode,\n          motion,\n        },\n      }),\n      [density, locale, mode, motion],\n    ),\n  };\n}\n","import { Density as DensityType } from '@awsui/global-styles';\nimport { useContext } from 'react';\nimport DensityContext from '../contexts/density';\n\ntype State = [DensityType, (density: DensityType) => void];\n\nexport default function useDensity(): State {\n  const value: State | null = useContext(DensityContext);\n  if (value === null) {\n    throw new Error('The Density context was not mounted.');\n  }\n  return value;\n}\n","import { useContext } from 'react';\nimport LocaleType from '../constants/locale';\nimport LocaleContext from '../contexts/locale';\n\ntype State = [LocaleType, (locale: LocaleType) => void];\n\nexport default function useLocale(): State {\n  const value: State | null = useContext(LocaleContext);\n  if (value === null) {\n    throw new Error('The Locale context was not mounted.');\n  }\n  return value;\n}\n","import { Mode as ModeType } from '@awsui/global-styles';\nimport { useContext } from 'react';\nimport ModeContext from '../contexts/mode';\n\ntype State = [ModeType, (mode: ModeType) => void];\n\nexport default function useMode(): State {\n  const value: State | null = useContext(ModeContext);\n  if (value === null) {\n    throw new Error('The Mode context was not mounted.');\n  }\n  return value;\n}\n","import { useContext } from 'react';\nimport Motion from '../contexts/motion';\n\ntype State = [boolean, (motion: boolean) => void];\n\nexport default function useMotion(): State {\n  const value: State | null = useContext(Motion);\n  if (value === null) {\n    throw new Error('The Motion context was not mounted.');\n  }\n  return value;\n}\n","import CollectionPreferences from '@awsui/components-react/collection-preferences';\nimport SpaceBetween from '@awsui/components-react/space-between';\nimport { ReactElement } from 'react';\nimport RegionSelect from '../../components/region-select';\nimport useHeaderActions from './header-actions.hook';\n\nexport default function HeaderActions(): ReactElement {\n  const {\n    cancelLabel,\n    confirmLabel,\n    customPreference,\n    handleConfirm,\n    preferences,\n    title,\n  } = useHeaderActions();\n\n  return (\n    <SpaceBetween direction=\"horizontal\" size=\"s\">\n      <RegionSelect />\n      <CollectionPreferences\n        cancelLabel={cancelLabel}\n        confirmLabel={confirmLabel}\n        customPreference={customPreference}\n        onConfirm={handleConfirm}\n        preferences={preferences}\n        title={title}\n      />\n    </SpaceBetween>\n  );\n}\n","import Link from '@awsui/components-react/link';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\n\nexport default function HeaderDescription(): ReactElement {\n  return (\n    <I18n\n      name={\n        <Link\n          fontSize=\"body-s\"\n          href=\"https://charlesstover.com/\"\n          target=\"_blank\"\n        >\n          Charles Stover\n        </Link>\n      }\n    >\n      an unofficial AWS console by $name\n    </I18n>\n  );\n}\n","import { MutableRefObject, useLayoutEffect, useRef } from 'react';\n\nexport default function useHideContainerContent(): MutableRefObject<HTMLDivElement | null> {\n  const ref: MutableRefObject<HTMLDivElement | null> = useRef(null);\n\n  useLayoutEffect((): void => {\n    if (ref.current === null) {\n      throw new Error('The header ref was not mounted.');\n    }\n    const container: HTMLElement = ref.current.firstChild as HTMLElement;\n    const content: HTMLElement = container.lastChild as HTMLElement;\n    content.style.setProperty('display', 'none');\n  }, []);\n\n  return ref;\n}\n","import Container from '@awsui/components-react/container';\nimport AwsuiHeader from '@awsui/components-react/header';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport HeaderActions from '../../components/header-actions';\nimport HeaderDescription from '../../components/header-description';\nimport useHeader from './header.hook';\n\nexport default function Header(): ReactElement {\n  const { ref } = useHeader();\n\n  return (\n    <div ref={ref}>\n      <Container\n        header={\n          <AwsuiHeader\n            description={<HeaderDescription />}\n            actions={<HeaderActions />}\n          >\n            <I18n>Open source AWS console</I18n>\n          </AwsuiHeader>\n        }\n      />\n    </div>\n  );\n}\n","import { MutableRefObject } from 'react';\nimport useHideContainerContent from '../../hooks/use-hide-container-content';\n\ninterface State {\n  ref: MutableRefObject<HTMLDivElement | null>;\n}\n\nexport default function useHeader(): State {\n  return {\n    ref: useHideContainerContent(),\n  };\n}\n","import { SideNavigationProps } from '@awsui/components-react/side-navigation';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\n\nexport default function useItems(): SideNavigationProps.Item[] {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo(\n    (): SideNavigationProps.Item[] => [\n      {\n        href: '/',\n        text: translate('Home') || '...',\n        type: 'link',\n      },\n      {\n        type: 'divider',\n      },\n      {\n        href: '/log-groups',\n        text: translate('Log groups') || '...',\n        type: 'link',\n      },\n    ],\n    [translate],\n  );\n}\n","import Box from '@awsui/components-react/box';\nimport SideNavigation from '@awsui/components-react/side-navigation';\nimport I18n from 'lazy-i18n';\nimport { ReactElement, memo } from 'react';\nimport useNavigation from './navigation.hook';\nimport styles from './navigation.module.scss';\n\nfunction Navigation(): ReactElement {\n  const { activeHref, handleFollow, items } = useNavigation();\n\n  return (\n    <>\n      <Box margin=\"m\" variant=\"h2\">\n        <I18n>Navigation</I18n>\n      </Box>\n      <SideNavigation\n        activeHref={activeHref}\n        className={styles.sideNavigation}\n        items={items}\n        onFollow={handleFollow}\n      />\n    </>\n  );\n}\n\nexport default memo(Navigation);\n","import { SideNavigationProps } from '@awsui/components-react/side-navigation';\nimport { useSideNavigation } from 'use-awsui-router';\nimport useItems from './navigation.hook.items';\n\ninterface State {\n  activeHref: string;\n  handleFollow: Required<SideNavigationProps>['onFollow'];\n  items: SideNavigationProps.Item[];\n}\n\nexport default function useNavigation(): State {\n  const { activeHref, handleFollow } = useSideNavigation();\n\n  return {\n    activeHref,\n    handleFollow,\n    items: useItems(),\n  };\n}\n","import Flashbar, { FlashbarProps } from '@awsui/components-react/flashbar';\nimport { ReactElement } from 'react';\n\ninterface Props {\n  children?: FlashbarProps.MessageDefinition[];\n}\n\nexport default function Notifications({\n  children,\n}: Props): null | ReactElement {\n  if (typeof children === 'undefined' || children.length === 0) {\n    return null;\n  }\n\n  return <Flashbar items={children} />;\n}\n","import AppLayout, { AppLayoutProps } from '@awsui/components-react/app-layout';\nimport { BreadcrumbGroupProps } from '@awsui/components-react/breadcrumb-group';\nimport { FlashbarProps } from '@awsui/components-react/flashbar';\nimport { ComponentType, ReactElement, ReactNode } from 'react';\nimport Breadcrumbs from '../../components/breadcrumbs';\nimport Header from '../../components/header';\nimport Navigation from '../../components/navigation';\nimport Notifications from '../../components/notifications';\nimport useAppLayout from './app-layout.hook';\n\ninterface Props {\n  Tools?: ComponentType<unknown>;\n  breadcrumbs?: BreadcrumbGroupProps.Item[];\n  breadcrumbsHide?: boolean;\n  children: ReactNode;\n  contentType?: AppLayoutProps.ContentType;\n  navigationHide?: boolean;\n  notifications?: FlashbarProps.MessageDefinition[];\n  onToolsChange?: AppLayoutProps['onToolsChange'];\n  toolsHide?: boolean;\n  toolsOpen?: boolean;\n}\n\nexport default function CustomAppLayout({\n  Tools,\n  breadcrumbs,\n  breadcrumbsHide = false,\n  children,\n  contentType,\n  navigationHide,\n  notifications,\n  onToolsChange,\n  toolsHide,\n  toolsOpen: controlledToolsOpen,\n}: Props): ReactElement {\n  const {\n    ariaLabels,\n    handleNavigationChange,\n    handleToolsChange,\n    navigationOpen,\n    ref,\n    toolsOpen,\n  } = useAppLayout({\n    controlledToolsOpen,\n    onToolsChange,\n  });\n\n  return (\n    <div ref={ref}>\n      <AppLayout\n        ariaLabels={ariaLabels}\n        breadcrumbs={\n          !breadcrumbsHide && <Breadcrumbs>{breadcrumbs}</Breadcrumbs>\n        }\n        content={children}\n        contentType={contentType}\n        navigation={<Navigation />}\n        navigationOpen={navigationOpen}\n        navigationHide={navigationHide}\n        notifications={\n          <>\n            <Notifications>{notifications}</Notifications>\n            <Header />\n          </>\n        }\n        onNavigationChange={handleNavigationChange}\n        onToolsChange={handleToolsChange}\n        tools={Tools && <Tools />}\n        toolsHide={toolsHide}\n        toolsOpen={toolsOpen}\n      />\n    </div>\n  );\n}\n","import { AppLayoutProps } from '@awsui/components-react/app-layout';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { MutableRefObject, useLayoutEffect, useMemo, useRef } from 'react';\nimport { useAppLayout as useAwsuiAppLayout } from 'use-awsui';\n\ninterface Props {\n  controlledToolsOpen?: boolean;\n  onToolsChange?(\n    event: NonCancelableCustomEvent<AppLayoutProps.ChangeDetail>,\n  ): void;\n}\n\ninterface State {\n  ariaLabels: AppLayoutProps.Labels;\n  navigationOpen?: boolean;\n  ref: MutableRefObject<HTMLDivElement | null>;\n  toolsOpen?: boolean;\n  handleNavigationChange(\n    this: void,\n    event: NonCancelableCustomEvent<AppLayoutProps.ChangeDetail>,\n  ): void;\n  handleToolsChange(\n    this: void,\n    event: NonCancelableCustomEvent<AppLayoutProps.ChangeDetail>,\n  ): void;\n}\n\nexport default function useAppLayout({\n  controlledToolsOpen,\n  onToolsChange,\n}: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const {\n    handleNavigationChange,\n    handleToolsChange,\n    navigationOpen,\n    toolsOpen,\n  } = useAwsuiAppLayout({\n    defaultNavigationOpen: false,\n    defaultToolsOpen: false,\n  });\n\n  const ref: MutableRefObject<HTMLDivElement | null> = useRef(null);\n\n  // Effects\n  useLayoutEffect((): void => {\n    if (ref.current === null) {\n      return;\n    }\n    ref.current.scrollIntoView();\n  }, []);\n\n  return {\n    handleNavigationChange,\n    navigationOpen,\n    ref,\n\n    ariaLabels: useMemo(\n      (): AppLayoutProps.Labels => ({\n        navigation: translate('Navigation'),\n        navigationToggle: translate('Toggle navigation'),\n        navigationClose: translate('Close navigation'),\n        notifications: translate('Notifications'),\n        tools: translate('Tools'),\n        toolsToggle: translate('Toggle tools'),\n        toolsClose: translate('Close tools'),\n      }),\n      [translate],\n    ),\n\n    handleToolsChange:\n      typeof onToolsChange === 'function' ? onToolsChange : handleToolsChange,\n\n    toolsOpen:\n      typeof controlledToolsOpen === 'boolean'\n        ? controlledToolsOpen\n        : toolsOpen,\n  };\n}\n","import Button from '@awsui/components-react/button';\nimport Checkbox from '@awsui/components-react/checkbox';\nimport FormField from '@awsui/components-react/form-field';\nimport Input from '@awsui/components-react/input';\nimport SpaceBetween from '@awsui/components-react/space-between';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport AppLayout from '../../components/app-layout';\nimport useAuthenticate from './authenticate.hook';\n\ninterface Props {\n  onAuthentication(\n    accessKeyId: string,\n    secretAccessKey: string,\n    remember: boolean,\n  ): void;\n}\n\nexport default function Authenticate({\n  onAuthentication,\n}: Props): ReactElement {\n  const {\n    accessKeyId,\n    accessKeyIdAriaLabel,\n    handleAccessKeyIdChange,\n    handleRememberChange,\n    handleSecretAccessKeyChange,\n    handleSubmit,\n    remember,\n    secretAccessKey,\n    secretAccessKeyAriaLabel,\n  } = useAuthenticate({ onAuthentication });\n\n  return (\n    <AppLayout breadcrumbsHide contentType=\"form\" navigationHide toolsHide>\n      <SpaceBetween direction=\"vertical\" size=\"l\">\n        <FormField label={<I18n>Access key ID</I18n>}>\n          <Input\n            ariaLabel={accessKeyIdAriaLabel}\n            onChange={handleAccessKeyIdChange}\n            value={accessKeyId}\n          />\n        </FormField>\n        <FormField label={<I18n>Secret access key</I18n>}>\n          <Input\n            ariaLabel={secretAccessKeyAriaLabel}\n            onChange={handleSecretAccessKeyChange}\n            type=\"password\"\n            value={secretAccessKey}\n          />\n        </FormField>\n        <Checkbox checked={remember} onChange={handleRememberChange}>\n          <I18n>Remember this device</I18n>\n        </Checkbox>\n        <Button onClick={handleSubmit} variant=\"primary\">\n          <I18n>Authenticate</I18n>\n        </Button>\n      </SpaceBetween>\n    </AppLayout>\n  );\n}\n","import { CheckboxProps } from '@awsui/components-react/checkbox';\nimport { InputProps } from '@awsui/components-react/input';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback } from 'react';\nimport { useCheckbox, useInput } from 'use-awsui';\n\ninterface Props {\n  onAuthentication(\n    accessKeyId: string,\n    secretAccessKey: string,\n    remember: boolean,\n  ): void;\n}\n\ninterface State {\n  accessKeyId: string;\n  accessKeyIdAriaLabel?: string;\n  handleAccessKeyIdChange(\n    this: void,\n    event: NonCancelableCustomEvent<InputProps.ChangeDetail>,\n  ): void;\n  handleRememberChange(\n    this: void,\n    event: NonCancelableCustomEvent<CheckboxProps.ChangeDetail>,\n  ): void;\n  handleSecretAccessKeyChange(\n    this: void,\n    event: NonCancelableCustomEvent<InputProps.ChangeDetail>,\n  ): void;\n  handleSubmit(this: void): void;\n  remember: boolean;\n  secretAccessKey: string;\n  secretAccessKeyAriaLabel?: string;\n}\n\nexport default function useAuthenticate({ onAuthentication }: Props): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const { checked: remember, handleChange: handleRememberChange } =\n    useCheckbox();\n  const { handleChange: handleAccessKeyIdChange, value: accessKeyId } =\n    useInput();\n  const { handleChange: handleSecretAccessKeyChange, value: secretAccessKey } =\n    useInput();\n\n  return {\n    accessKeyId,\n    accessKeyIdAriaLabel: translate('Access key ID'),\n    handleAccessKeyIdChange,\n    handleRememberChange,\n    handleSecretAccessKeyChange,\n    remember,\n    secretAccessKey,\n    secretAccessKeyAriaLabel: translate('Secret access key'),\n\n    handleSubmit: useCallback((): void => {\n      onAuthentication(accessKeyId, secretAccessKey, remember);\n    }, [accessKeyId, onAuthentication, remember, secretAccessKey]),\n  };\n}\n","import Box from '@awsui/components-react/box';\nimport { ReactElement } from 'react';\nimport AppLayout from '../../components/app-layout';\n\nexport default function Alarms(): ReactElement {\n  return (\n    <AppLayout breadcrumbsHide contentType=\"form\" toolsHide>\n      <Box variant=\"p\">Use the navigation bar to manage your resources.</Box>\n    </AppLayout>\n  );\n}\n","import CollectionPreferences from '@awsui/components-react/collection-preferences';\nimport Pagination from '@awsui/components-react/pagination';\nimport Table, { TableProps } from '@awsui/components-react/table';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport useResourcesTable from './resources-table.hook';\n\ninterface Props<T> {\n  columnDefinitions: readonly TableProps.ColumnDefinition<T>[];\n  loadingStep: number;\n  loadingSteps: number;\n  resources: readonly T[];\n  trackBy: keyof T extends string ? keyof T : never;\n}\n\nexport default function ResourcesTable<T>({\n  columnDefinitions,\n  loadingStep,\n  loadingSteps,\n  resources,\n  trackBy,\n}: Props<T>): ReactElement {\n  const {\n    ariaLabels,\n    cancelLabel,\n    collectionPreferencesTitle,\n    confirmLabel,\n    currentPageIndex,\n    handleConfirm,\n    handlePaginationChange,\n    handleSelectionChange,\n    handleSortingChange,\n    loading,\n    loadingText,\n    openEnd,\n    pageSizePreference,\n    pagesCount,\n    preferences,\n    selectedItems,\n    sortingColumn,\n    sortingDescending,\n    visibleContent,\n    visibleContentPreference,\n    wrapLines,\n    wrapLinesPreference,\n  } = useResourcesTable<T>({\n    loadingStep,\n    loadingSteps,\n  });\n\n  return (\n    <Table\n      ariaLabels={ariaLabels}\n      columnDefinitions={columnDefinitions}\n      empty=\"TODO: empty\"\n      filter=\"TODO: filter\"\n      header={<I18n>Resources</I18n>}\n      items={resources}\n      loading={loading}\n      loadingText={loadingText}\n      onSelectionChange={handleSelectionChange}\n      onSortingChange={handleSortingChange}\n      pagination={\n        <Pagination\n          currentPageIndex={currentPageIndex}\n          onChange={handlePaginationChange}\n          openEnd={openEnd}\n          pagesCount={pagesCount}\n        />\n      }\n      preferences={\n        <CollectionPreferences\n          cancelLabel={cancelLabel}\n          confirmLabel={confirmLabel}\n          onConfirm={handleConfirm}\n          pageSizePreference={pageSizePreference}\n          preferences={preferences}\n          title={collectionPreferencesTitle}\n          visibleContentPreference={visibleContentPreference}\n          wrapLinesPreference={wrapLinesPreference}\n        />\n      }\n      resizableColumns\n      selectedItems={selectedItems}\n      selectionType=\"multi\"\n      sortingColumn={sortingColumn}\n      sortingDescending={sortingDescending}\n      stickyHeader\n      trackBy={trackBy}\n      visibleColumns={visibleContent}\n      wrapLines={wrapLines}\n    />\n  );\n\n  /*\n  if (error) {\n    return (\n      <Alert\n        buttonText={<I18n>Retry</I18n>}\n        dismissible={false}\n        header={<I18n>There was an error loading your resources.</I18n>}\n        onButtonClick={handleErrorButtonClick}\n        type=\"error\"\n        visible\n      >\n        {error.message}\n      </Alert>\n    );\n  }\n  */\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { PaginationProps } from '@awsui/components-react/pagination';\nimport { TableProps } from '@awsui/components-react/table';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\nimport { useCollectionPreferences, usePagination, useTable } from 'use-awsui';\n\ninterface Props {\n  loadingStep: number;\n  loadingSteps: number;\n}\n\ninterface State<T> {\n  ariaLabels: TableProps.AriaLabels<T>;\n  cancelLabel: string;\n  collectionPreferencesTitle: string;\n  confirmLabel: string;\n  currentPageIndex: number;\n  handleConfirm(\n    this: void,\n    event: NonCancelableCustomEvent<CollectionPreferencesProps.Preferences>,\n  ): void;\n  handlePaginationChange(\n    this: void,\n    event: NonCancelableCustomEvent<PaginationProps.ChangeDetail>,\n  ): void;\n  handleSelectionChange(\n    this: void,\n    event: NonCancelableCustomEvent<TableProps.SelectionChangeDetail<T>>,\n  ): void;\n  handleSortingChange(\n    this: void,\n    event: NonCancelableCustomEvent<TableProps.SortingState<T>>,\n  ): void;\n  loading: boolean;\n  loadingText: string;\n  openEnd: boolean;\n  pageSize?: number;\n  pageSizePreference: CollectionPreferencesProps.PageSizePreference;\n  pagesCount: number;\n  preferences: CollectionPreferencesProps.Preferences;\n  selectedItems?: readonly T[];\n  sortingColumn?: TableProps.SortingColumn<T>;\n  sortingDescending?: boolean;\n  visibleContent?: readonly string[];\n  visibleContentPreference: CollectionPreferencesProps.VisibleContentPreference;\n  wrapLines?: boolean;\n  wrapLinesPreference: CollectionPreferencesProps.WrapLinesPreference;\n}\n\nexport default function useResourcesTable<T>({\n  loadingStep,\n  loadingSteps,\n}: Props): State<T> {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const { handleConfirm, pageSize, preferences, visibleContent, wrapLines } =\n    useCollectionPreferences();\n\n  const { currentPageIndex, handleChange: handlePaginationChange } =\n    usePagination();\n\n  const {\n    handleSelectionChange,\n    handleSortingChange,\n    selectedItems,\n    sortingColumn,\n    sortingDescending,\n  } = useTable<T>();\n\n  return {\n    cancelLabel: translate('Cancel') || '...',\n    collectionPreferencesTitle: translate('Preferences') || '...',\n    confirmLabel: translate('Confirm') || '...',\n    currentPageIndex,\n    handleConfirm,\n    handlePaginationChange,\n    handleSelectionChange,\n    handleSortingChange,\n    loading: loadingStep <= loadingSteps,\n    openEnd: false,\n    pageSize,\n    pagesCount: 1,\n    preferences,\n    selectedItems,\n    sortingColumn,\n    sortingDescending,\n    visibleContent,\n    wrapLines,\n\n    ariaLabels: useMemo(\n      (): TableProps.AriaLabels<T> => ({\n        selectionGroupLabel: translate('Resources selection') || '',\n\n        allItemsSelectionLabel({\n          selectedItems,\n        }: TableProps.SelectionState<T>): string {\n          if (selectedItems.length === 0) {\n            return translate('No resources selected') || '';\n          }\n          if (selectedItems.length === 1) {\n            return translate('1 resource selected') || '';\n          }\n          return (\n            translate('$n resources selected', { n: selectedItems.length }) ||\n            ''\n          );\n        },\n\n        itemSelectionLabel(\n          { selectedItems }: TableProps.SelectionState<T>,\n          row: T,\n        ): string {\n          const findRow = (item: T): boolean => item === row;\n          if (selectedItems.findIndex(findRow) === -1) {\n            return translate('Resource is not selected.') || '';\n          }\n          return translate('Resource is selected.') || '';\n        },\n      }),\n      [translate],\n    ),\n\n    loadingText:\n      translate('Loading $step of $total', {\n        step: loadingStep,\n        total: loadingSteps,\n      }) || '...',\n\n    pageSizePreference:\n      useMemo((): CollectionPreferencesProps.PageSizePreference => {\n        const mapNumberToPageSizeOption = (\n          n: number,\n        ): CollectionPreferencesProps.PageSizeOption => ({\n          label: translate('$n resources', { n }) || '...',\n          value: n,\n        });\n\n        return {\n          title: translate('Select page size') || '...',\n          options: [25, 50, 100].map(mapNumberToPageSizeOption),\n        };\n      }, [translate]),\n\n    visibleContentPreference: useMemo(\n      (): CollectionPreferencesProps.VisibleContentPreference => ({\n        title: translate('Select visible content') || '...',\n        options: [],\n      }),\n      [translate],\n    ),\n\n    wrapLinesPreference: useMemo(\n      (): CollectionPreferencesProps.WrapLinesPreference => ({\n        description:\n          translate(\n            'Enable to wrap table cell content. Disable to truncate text.',\n          ) || '...',\n        label: translate('Wrap lines') || '...',\n      }),\n      [translate],\n    ),\n  };\n}\n","import { createContext } from 'react';\nimport Authentication from '../types/authentication';\n\nexport default createContext<Authentication | null>(null);\n","import { ServiceConfigurationOptions } from 'aws-sdk/lib/service';\nimport { useMemo } from 'react';\nimport useAuthentication from '../hooks/use-authentication';\nimport useRegion from '../hooks/use-region';\n\nexport default function useAwsSdk<T>(\n  Client: new (options?: ServiceConfigurationOptions) => T,\n): T {\n  const { accessKeyId, secretAccessKey } = useAuthentication();\n  const [region] = useRegion();\n\n  return useMemo((): T => {\n    return new Client({\n      accessKeyId,\n      region,\n      secretAccessKey,\n    });\n  }, [accessKeyId, Client, region, secretAccessKey]);\n}\n","import { useContext } from 'react';\nimport AuthenticationContext from '../contexts/authentication';\nimport Authentication from '../types/authentication';\n\nexport default function useAuthentication(): Authentication {\n  const value: Authentication | null = useContext(AuthenticationContext);\n  if (value === null) {\n    throw new Error('The Authentication context was not mounted.');\n  }\n  return value;\n}\n","import { BreadcrumbGroupProps } from '@awsui/components-react/breadcrumb-group';\nimport CloudWatchLogs, {\n  DescribeLogGroupsResponse,\n  LogGroup,\n} from 'aws-sdk/clients/cloudwatchlogs';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\nimport { useQuery } from 'react-query';\nimport useCloudWatchLogs from '../../hooks/use-cloudwatch-logs';\nimport useRegion from '../../hooks/use-region';\n\ninterface State {\n  breadcrumbs: BreadcrumbGroupProps.Item[];\n  loadingStep: number;\n  loadingSteps: number;\n  resources: readonly LogGroup[];\n}\n\nexport default function useLogGroups(): State {\n  // Contexts\n  const cloudWatchLogs: CloudWatchLogs = useCloudWatchLogs();\n  const [region] = useRegion();\n  const translate: TranslateFunction = useTranslate();\n\n  const { data } = useQuery(\n    ['log-groups', region],\n    async (): Promise<DescribeLogGroupsResponse> => {\n      return await cloudWatchLogs.describeLogGroups().promise();\n    },\n  );\n\n  return {\n    loadingStep: data?.logGroups ? 2 : 1,\n    loadingSteps: 1,\n    resources: data?.logGroups || [],\n\n    breadcrumbs: useMemo(\n      (): BreadcrumbGroupProps.Item[] => [\n        {\n          href: '/log-groups',\n          text: translate('Log groups') || '...',\n        },\n      ],\n      [translate],\n    ),\n  };\n}\n","import CloudWatchLogs from 'aws-sdk/clients/cloudwatchlogs';\nimport useAwsSdk from '../hooks/use-aws-sdk';\n\nexport default function useCloudWatchLogs(): CloudWatchLogs {\n  return useAwsSdk(CloudWatchLogs);\n}\n","import { TableProps } from '@awsui/components-react/table';\nimport { LogGroup } from 'aws-sdk/clients/cloudwatchlogs';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport AppLayout from '../../components/app-layout';\nimport ResourcesTable from '../../components/resources-table';\nimport useLogGroups from './log-groups.hook';\n\nconst COLUMN_DEFINITIONS: TableProps.ColumnDefinition<LogGroup>[] = [\n  {\n    id: 'logGroupName',\n    header: <I18n>Name</I18n>,\n    cell({ logGroupName }: LogGroup): ReactElement {\n      return <>{logGroupName}</>;\n    },\n  },\n  {\n    id: 'creationTime',\n    header: <I18n>Creation time</I18n>,\n    cell({ creationTime }: LogGroup): ReactElement {\n      return <>{creationTime}</>;\n    },\n  },\n  {\n    id: 'retentionInDays',\n    header: <I18n>Retention</I18n>,\n    cell({ retentionInDays }: LogGroup): ReactElement {\n      return <>{retentionInDays}</>;\n    },\n  },\n  {\n    id: 'metricFilterCount',\n    header: <I18n>Metric filters</I18n>,\n    cell({ metricFilterCount }: LogGroup): ReactElement {\n      return <>{metricFilterCount}</>;\n    },\n  },\n  {\n    id: 'storedBytes',\n    header: <I18n>Stored bytes</I18n>,\n    cell({ storedBytes }: LogGroup): ReactElement {\n      return <>{storedBytes}</>;\n    },\n  },\n  {\n    id: 'kmsKeyId',\n    header: <I18n>KMS key ID</I18n>,\n    cell({ kmsKeyId }: LogGroup): ReactElement {\n      return <>{kmsKeyId}</>;\n    },\n  },\n];\n\nexport default function LogGroups(): ReactElement {\n  const { breadcrumbs, loadingStep, loadingSteps, resources } = useLogGroups();\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs} toolsHide>\n      <ResourcesTable\n        columnDefinitions={COLUMN_DEFINITIONS}\n        loadingStep={loadingStep}\n        loadingSteps={loadingSteps}\n        resources={resources}\n        trackBy=\"logGroupName\"\n      />\n    </AppLayout>\n  );\n}\n","import { ReactElement } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from '../../components/home';\nimport LogGroups from '../../components/log-groups';\n\nexport default function Routes(): ReactElement {\n  return (\n    <Switch>\n      <Route component={LogGroups} path=\"/log-groups\" />\n      <Route component={Home} />\n    </Switch>\n  );\n}\n","import { ReactElement } from 'react';\nimport Authenticate from '../../components/authenticate';\nimport Routes from '../../components/routes';\nimport Authentication from '../../contexts/authentication';\n\ninterface Props {\n  accessKeyId?: string;\n  onAuthentication(\n    accessKeyId: string,\n    secretAccessKey: string,\n    remember: boolean,\n  ): void;\n  secretAccessKey?: string;\n}\n\nexport default function Main({\n  accessKeyId,\n  onAuthentication,\n  secretAccessKey,\n}: Props): ReactElement {\n  if (\n    typeof accessKeyId === 'undefined' ||\n    typeof secretAccessKey === 'undefined'\n  ) {\n    return <Authenticate onAuthentication={onAuthentication} />;\n  }\n\n  return (\n    <Authentication.Provider value={{ accessKeyId, secretAccessKey }}>\n      <Routes />\n    </Authentication.Provider>\n  );\n}\n","import { QueryClient } from 'react-query';\n\nexport default new QueryClient();\n","import Locale from '../constants/locale';\nimport enUs from '../translations/en-us.json';\n\nexport default {\n  [Locale.EnUs]: enUs,\n};\n","import '@awsui/global-styles/index.css';\nimport { I18nProvider } from 'lazy-i18n';\nimport { ReactElement, StrictMode } from 'react';\nimport { QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from '../../components/main';\nimport Locale from '../../constants/locale';\nimport QUERY_CLIENT from '../../constants/query-client';\nimport TRANSLATIONS from '../../constants/translations';\nimport Density from '../../contexts/density';\nimport LocaleContext from '../../contexts/locale';\nimport Mode from '../../contexts/mode';\nimport Motion from '../../contexts/motion';\nimport Region from '../../contexts/region';\nimport AppProps from '../../types/app-props';\nimport useApp from './app.hook';\nimport './app.module.scss';\n\nexport default function App({\n  accessKeyId,\n  density,\n  mode,\n  motion,\n  onAuthentication,\n  onDensityChange,\n  onModeChange,\n  onMotionChange,\n  onRegionChange,\n  region,\n  secretAccessKey,\n}: AppProps): ReactElement {\n  const { handleLocaleChange, locale } = useApp();\n\n  return (\n    <StrictMode>\n      <BrowserRouter>\n        <Density.Provider value={[density, onDensityChange]}>\n          <I18nProvider\n            fallbackLocale={Locale.EnUs}\n            locale={locale}\n            translations={TRANSLATIONS}\n          >\n            <LocaleContext.Provider value={[locale, handleLocaleChange]}>\n              <Mode.Provider value={[mode, onModeChange]}>\n                <Motion.Provider value={[motion, onMotionChange]}>\n                  <QueryClientProvider client={QUERY_CLIENT}>\n                    <Region.Provider value={[region, onRegionChange]}>\n                      <Main\n                        accessKeyId={accessKeyId}\n                        onAuthentication={onAuthentication}\n                        secretAccessKey={secretAccessKey}\n                      />\n                    </Region.Provider>\n                  </QueryClientProvider>\n                </Motion.Provider>\n              </Mode.Provider>\n            </LocaleContext.Provider>\n          </I18nProvider>\n        </Density.Provider>\n      </BrowserRouter>\n    </StrictMode>\n  );\n}\n","import { useState } from 'react';\nimport Locale from '../../constants/locale';\n\ninterface State {\n  handleLocaleChange(this: void, locale: Locale): void;\n  locale: Locale;\n}\n\nexport default function useApp(this: void): State {\n  // States\n  const [locale, handleLocaleChange] = useState(Locale.EnUs);\n\n  return {\n    handleLocaleChange,\n    locale,\n  };\n}\n","const root: HTMLElement = document.getElementById('root') as HTMLElement;\n\nexport default root;\n","import { Metric, getCLS, getFCP, getFID, getLCP, getTTFB } from 'web-vitals';\n\ngetCLS((metric: Metric): void => {\n  console.log('Unknown web-vitals metric (CLS)', metric);\n});\n\ngetFCP(({ value }: Metric): void => {\n  console.log(`Performance paint timing: ${value}`);\n});\n\ngetFID(({ value }: Metric): void => {\n  console.log(`Performance event timing: ${value}`);\n});\n\ngetLCP(({ value }: Metric): void => {\n  console.log(`Largest contentful paint: ${value}`);\n});\n\ngetTTFB(({ value }: Metric): void => {\n  console.log(`Performance navigation timing: ${value}`);\n});\n","import {\n  Density,\n  Mode,\n  applyDensity,\n  applyMode,\n  disableMotion,\n} from '@awsui/global-styles';\nimport { render } from 'react-dom';\nimport App from './components/app';\nimport Region from './constants/region';\nimport root from './constants/root';\nimport AppProps from './types/app-props';\nimport getAuthentication from './utils/get-authentication';\nimport './utils/report-web-vitals';\nimport setAuthentication from './utils/set-authentication';\n\ninterface Options {\n  accessKeyId?: string;\n  defaultDensity?: Density;\n  defaultMode?: Mode;\n  defaultMotion?: boolean;\n  defaultRegion?: Region;\n  secretAccessKey?: string;\n}\n\nconst DEFAULT_DENSITY: Density = Density.Compact;\nconst DEFAULT_MODE: Mode = Mode.Dark;\nconst DEFAULT_MOTION = true;\nconst DEFAULT_REGION: Region = Region.UsEast1;\n\nclass Application {\n  private _accessKeyId: string | undefined;\n  private _density: Density = DEFAULT_DENSITY;\n  private _mode: Mode = DEFAULT_MODE;\n  private _motion: boolean = DEFAULT_MOTION;\n  private _region: Region = DEFAULT_REGION;\n  private _secretAccessKey: string | undefined;\n\n  public constructor({\n    accessKeyId,\n    defaultDensity = DEFAULT_DENSITY,\n    defaultMode = DEFAULT_MODE,\n    defaultMotion = DEFAULT_MOTION,\n    defaultRegion = DEFAULT_REGION,\n    secretAccessKey,\n  }: Options) {\n    this._accessKeyId = accessKeyId;\n    this._region = defaultRegion;\n    this._secretAccessKey = secretAccessKey;\n    this.render = this.render.bind(this);\n\n    this.applyDensity(defaultDensity);\n    this.applyMode(defaultMode);\n    this.applyMotion(defaultMotion);\n    this.render();\n  }\n\n  private applyAuthentication(\n    accessKeyId: string,\n    secretAccessKey: string,\n    remember: boolean,\n  ): void {\n    this._accessKeyId = accessKeyId;\n    this._secretAccessKey = secretAccessKey;\n    if (remember) {\n      setAuthentication({\n        accessKeyId,\n        secretAccessKey,\n      });\n    }\n  }\n\n  private applyDensity(density: Density): void {\n    this._density = density;\n    applyDensity(density, document.body);\n  }\n\n  private applyMode(mode: Mode): void {\n    this._mode = mode;\n    applyMode(mode, document.body);\n  }\n\n  private applyMotion(motion: boolean): void {\n    this._motion = motion;\n    disableMotion(!motion);\n  }\n\n  private applyRegion(region: Region): void {\n    this._region = region;\n  }\n\n  private get props(): AppProps {\n    return {\n      accessKeyId: this._accessKeyId,\n      density: this._density,\n      mode: this._mode,\n      motion: this._motion,\n      onAuthentication: this.setAuthentication.bind(this),\n      onDensityChange: this.setDensity.bind(this),\n      onModeChange: this.setMode.bind(this),\n      onMotionChange: this.setMotion.bind(this),\n      onRegionChange: this.setRegion.bind(this),\n      region: this._region,\n      secretAccessKey: this._secretAccessKey,\n    };\n  }\n\n  public setAuthentication(\n    accessKeyId: string,\n    secretAccessKey: string,\n    remember: boolean,\n  ): void {\n    this.applyAuthentication(accessKeyId, secretAccessKey, remember);\n    this.render();\n  }\n\n  public setDensity(density: Density): void {\n    this.applyDensity(density);\n    this.render();\n  }\n\n  public setMode(mode: Mode): void {\n    this.applyMode(mode);\n    this.render();\n  }\n\n  public setMotion(motion: boolean): void {\n    this.applyMotion(motion);\n    this.render();\n  }\n\n  public setRegion(region: Region): void {\n    this.applyRegion(region);\n    this.render();\n  }\n\n  public render(): void {\n    render(<App {...this.props} />, root);\n  }\n}\n\nnew Application({\n  ...getAuthentication(),\n  defaultDensity: DEFAULT_DENSITY,\n  defaultMode: DEFAULT_MODE,\n  defaultMotion: DEFAULT_MOTION,\n  defaultRegion: DEFAULT_REGION,\n});\n","import Authentication from '../types/authentication';\n\nexport default function setAuthentication(\n  authentication: Authentication,\n): void {\n  window.localStorage.setItem('authentication', JSON.stringify(authentication));\n}\n","import Authentication from '../types/authentication';\nimport isRecord from '../utils/is-record';\n\nexport default function getAuthentication(): Partial<Authentication> {\n  const value: null | string = window.localStorage.getItem('authentication');\n  if (value === null) {\n    return {};\n  }\n  try {\n    const unknown: unknown = JSON.parse(value);\n    if (!isRecord(unknown)) {\n      throw new Error('Expected a record.');\n    }\n    if (!Object.prototype.hasOwnProperty.call(unknown, 'accessKeyId')) {\n      throw new Error('Expected an access key ID.');\n    }\n    if (!Object.prototype.hasOwnProperty.call(unknown, 'secretAccessKey')) {\n      throw new Error('Expected a secret access key.');\n    }\n    if (typeof unknown.accessKeyId !== 'string') {\n      throw new Error('Expected access key ID to be a string.');\n    }\n    if (typeof unknown.secretAccessKey !== 'string') {\n      throw new Error('Expected secret access key to be a string.');\n    }\n    return {\n      accessKeyId: unknown.accessKeyId,\n      secretAccessKey: unknown.secretAccessKey,\n    };\n  } catch {\n    return {};\n  }\n}\n","export default function isRecord(\n  value: unknown,\n): value is Record<number | string, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n"],"sourceRoot":""}